{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slima\\\\OneDrive\\\\Bureau\\\\Nouveau dossier (3)\\\\frontend\\\\src\\\\components\\\\content\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NavBar(props) {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const searchproject = term => {\n    // You should implement this function based on your data handling logic\n    // It should update the data state and trigger state accordingly\n  };\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    bg: \"light\",\n    className: \"navbar shadow-sm p-3 mb-5 bg-white rounded\",\n    expand: true,\n    children: [/*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n      \"aria-controls\": \"responsive-navbar-nav\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n      id: \"responsive-navbar-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          searchproject(searchTerm);\n        },\n        \"aria-label\": \"Search\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profile\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"ml-auto\",\n          navbar: true,\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","Navbar","Nav","Link","jsxDEV","_jsxDEV","NavBar","props","_s","searchTerm","setSearchTerm","searchproject","term","bg","className","expand","children","Toggle","fileName","_jsxFileName","lineNumber","columnNumber","Collapse","id","type","value","onChange","e","target","onClick","to","navbar","_c","$RefreshReg$"],"sources":["C:/Users/slima/OneDrive/Bureau/Nouveau dossier (3)/frontend/src/components/content/Navbar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar(props) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  \n  const searchproject = (term) => {\n    // You should implement this function based on your data handling logic\n    // It should update the data state and trigger state accordingly\n  };\n\n  return (\n    <Navbar\n      bg=\"light\"\n      className=\"navbar shadow-sm p-3 mb-5 bg-white rounded\"\n      expand\n    >\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <button\n          onClick={() => {\n            searchproject(searchTerm);\n          }}\n          aria-label=\"Search\"\n        >\n          Search\n        </button>\n        <Link to={\"/profile\"}>\n          <Nav className=\"ml-auto\" navbar>\n            <Nav.Link>Profile</Nav.Link>\n          </Nav>\n        </Link>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default NavBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,GAAG,QAAQ,iBAAiB;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,aAAa,GAAIC,IAAI,IAAK;IAC9B;IACA;EAAA,CACD;EAED,oBACEP,OAAA,CAACJ,MAAM;IACLY,EAAE,EAAC,OAAO;IACVC,SAAS,EAAC,4CAA4C;IACtDC,MAAM;IAAAC,QAAA,gBAENX,OAAA,CAACJ,MAAM,CAACgB,MAAM;MAAC,iBAAc;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDhB,OAAA,CAACJ,MAAM,CAACqB,QAAQ;MAACC,EAAE,EAAC,uBAAuB;MAAAP,QAAA,gBACzCX,OAAA;QACEmB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEhB,UAAW;QAClBiB,QAAQ,EAAGC,CAAC,IAAKjB,aAAa,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFhB,OAAA;QACEwB,OAAO,EAAEA,CAAA,KAAM;UACblB,aAAa,CAACF,UAAU,CAAC;QAC3B,CAAE;QACF,cAAW,QAAQ;QAAAO,QAAA,EACpB;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThB,OAAA,CAACF,IAAI;QAAC2B,EAAE,EAAE,UAAW;QAAAd,QAAA,eACnBX,OAAA,CAACH,GAAG;UAACY,SAAS,EAAC,SAAS;UAACiB,MAAM;UAAAf,QAAA,eAC7BX,OAAA,CAACH,GAAG,CAACC,IAAI;YAAAa,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEb;AAACb,EAAA,CArCQF,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAuCf,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}