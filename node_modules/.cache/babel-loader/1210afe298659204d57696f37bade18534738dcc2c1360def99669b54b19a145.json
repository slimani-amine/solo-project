{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slima\\\\Downloads\\\\react-sidebar-example-application2\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport SideBar from \"./components/sidebar/SideBar\";\nimport Content from \"./components/content/Content\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Moblie first\n    this.toggle = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n    this.state = {\n      isOpen: false,\n      isMobile: true\n    };\n    this.previousWidth = -1;\n  }\n  updateWidth() {\n    const width = window.innerWidth;\n    const widthLimit = 576;\n    const isMobile = width <= widthLimit;\n    const wasMobile = this.previousWidth <= widthLimit;\n    if (isMobile !== wasMobile) {\n      this.setState({\n        isOpen: !isMobile\n      });\n    }\n    this.previousWidth = width;\n  }\n\n  /**\n   * Add event listener\n   */\n  componentDidMount() {\n    this.updateWidth();\n    window.addEventListener(\"resize\", this.updateWidth.bind(this));\n  }\n\n  /**\n   * Remove event listener\n   */\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth.bind(this));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {\n        toggle: this.toggle,\n        isOpen: this.state.isOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        toggle: this.toggle,\n        isOpen: this.state.isOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","SideBar","Content","jsxDEV","_jsxDEV","App","Component","constructor","props","toggle","setState","isOpen","state","isMobile","previousWidth","updateWidth","width","window","innerWidth","widthLimit","wasMobile","componentDidMount","addEventListener","bind","componentWillUnmount","removeEventListener","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/slima/Downloads/react-sidebar-example-application2/src/App.js"],"sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport SideBar from \"./components/sidebar/SideBar\";\nimport Content from \"./components/content/Content\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Moblie first\n    this.state = {\n      isOpen: false,\n      isMobile: true\n    };\n\n    this.previousWidth = -1;\n  }\n\n  updateWidth() {\n    const width = window.innerWidth;\n    const widthLimit = 576;\n    const isMobile = width <= widthLimit;\n    const wasMobile = this.previousWidth <= widthLimit;\n\n    if (isMobile !== wasMobile) {\n      this.setState({\n        isOpen: !isMobile\n      });\n    }\n\n    this.previousWidth = width;\n  }\n\n  /**\n   * Add event listener\n   */\n  componentDidMount() {\n    this.updateWidth();\n    window.addEventListener(\"resize\", this.updateWidth.bind(this));\n  }\n\n  /**\n   * Remove event listener\n   */\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth.bind(this));\n  }\n\n  toggle = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render() {\n    return (\n      <div className=\"App wrapper\">\n        <SideBar toggle={this.toggle} isOpen={this.state.isOpen} />\n        <Content toggle={this.toggle} isOpen={this.state.isOpen} />\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAC7C,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,OAAO,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,SAASL,KAAK,CAACM,SAAS,CAAC;EAChCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;;IAEZ;IAAA,KAuCFC,MAAM,GAAG,MAAM;MACb,IAAI,CAACC,QAAQ,CAAC;QAAEC,MAAM,EAAE,CAAC,IAAI,CAACC,KAAK,CAACD;MAAO,CAAC,CAAC;IAC/C,CAAC;IAxCC,IAAI,CAACC,KAAK,GAAG;MACXD,MAAM,EAAE,KAAK;MACbE,QAAQ,EAAE;IACZ,CAAC;IAED,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;EACzB;EAEAC,WAAWA,CAAA,EAAG;IACZ,MAAMC,KAAK,GAAGC,MAAM,CAACC,UAAU;IAC/B,MAAMC,UAAU,GAAG,GAAG;IACtB,MAAMN,QAAQ,GAAGG,KAAK,IAAIG,UAAU;IACpC,MAAMC,SAAS,GAAG,IAAI,CAACN,aAAa,IAAIK,UAAU;IAElD,IAAIN,QAAQ,KAAKO,SAAS,EAAE;MAC1B,IAAI,CAACV,QAAQ,CAAC;QACZC,MAAM,EAAE,CAACE;MACX,CAAC,CAAC;IACJ;IAEA,IAAI,CAACC,aAAa,GAAGE,KAAK;EAC5B;;EAEA;AACF;AACA;EACEK,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACN,WAAW,CAAC,CAAC;IAClBE,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACP,WAAW,CAACQ,IAAI,CAAC,IAAI,CAAC,CAAC;EAChE;;EAEA;AACF;AACA;EACEC,oBAAoBA,CAAA,EAAG;IACrBP,MAAM,CAACQ,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACV,WAAW,CAACQ,IAAI,CAAC,IAAI,CAAC,CAAC;EACnE;EAMAG,MAAMA,CAAA,EAAG;IACP,oBACEtB,OAAA;MAAKuB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BxB,OAAA,CAACH,OAAO;QAACQ,MAAM,EAAE,IAAI,CAACA,MAAO;QAACE,MAAM,EAAE,IAAI,CAACC,KAAK,CAACD;MAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3D5B,OAAA,CAACF,OAAO;QAACO,MAAM,EAAE,IAAI,CAACA,MAAO;QAACE,MAAM,EAAE,IAAI,CAACC,KAAK,CAACD;MAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAEV;AACF;AAEA,eAAe3B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}