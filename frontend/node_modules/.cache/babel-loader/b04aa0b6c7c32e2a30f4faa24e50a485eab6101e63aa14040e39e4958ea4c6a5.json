{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slima\\\\OneDrive\\\\Bureau\\\\Nouveau dossier (3)\\\\frontend\\\\src\\\\components\\\\SingUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const navigate = useNavigate();\n  const [message, setmessage] = useState(\"\");\n  const validateEmail = email => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n  const verif = async obj => {\n    if (obj.userName.length === 0 || obj.userName.includes(\"123456789\")) {\n      setmessage(\"Please enter a valid username\");\n    } else if (obj.email.length === 0 || !validateEmail(obj.email)) {\n      setmessage(\"Please enter a valid email address\");\n    } else if (obj.password.length < 8) {\n      setmessage(\"Password must be at least 8 characters long\");\n    } else if (obj.password !== obj.confirmpass) {\n      setmessage(\"Passwords do not match\");\n    } else {\n      try {\n        const emailResponse = await axios.get(`http://localhost:4000/api/users/getbyemail/${obj.email}`);\n        if (emailResponse.data.length > 0) {\n          setmessage(\"Email already exists\");\n        } else {\n          await axios.post(`http://localhost:4000/api/users/adduser`, {\n            userName: obj.userName,\n            email: obj.email,\n            password: obj.password,\n            imageUrl: obj.imageUrl,\n            githubLink: obj.githubLink\n          });\n          navigate(\"/\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"zkHfTrMeJGjTUOQIvYftC21/L1o=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","SignUp","_s","navigate","message","setmessage","validateEmail","email","re","test","verif","obj","userName","length","includes","password","confirmpass","emailResponse","get","data","post","imageUrl","githubLink","error","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/slima/OneDrive/Bureau/Nouveau dossier (3)/frontend/src/components/SingUp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst SignUp = () => {\r\n  const navigate = useNavigate();\r\n  const [message, setmessage] = useState(\"\");\r\n\r\n  const validateEmail = (email) => {\r\n    const re = /\\S+@\\S+\\.\\S+/;\r\n    return re.test(email);\r\n  };\r\n\r\n  const verif = async (obj) => {\r\n    if (obj.userName.length === 0 || obj.userName.includes(\"123456789\")) {\r\n      setmessage(\"Please enter a valid username\");\r\n    } else if (obj.email.length === 0 || !validateEmail(obj.email)) {\r\n      setmessage(\"Please enter a valid email address\");\r\n    } else if (obj.password.length < 8) {\r\n      setmessage(\"Password must be at least 8 characters long\");\r\n    } else if (obj.password !== obj.confirmpass) {\r\n      setmessage(\"Passwords do not match\");\r\n    } else {\r\n      try {\r\n        const emailResponse = await axios.get(\r\n          `http://localhost:4000/api/users/getbyemail/${obj.email}`\r\n        );\r\n\r\n        if (emailResponse.data.length > 0) {\r\n          setmessage(\"Email already exists\");\r\n        } else {\r\n          await axios.post(`http://localhost:4000/api/users/adduser`, {\r\n            userName: obj.userName,\r\n            email: obj.email,\r\n            password: obj.password,\r\n            imageUrl: obj.imageUrl,\r\n            githubLink: obj.githubLink,\r\n          });\r\n\r\n          navigate(\"/\");\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      {/* ... (rest of your JSX) ... */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,aAAa,GAAIC,KAAK,IAAK;IAC/B,MAAMC,EAAE,GAAG,cAAc;IACzB,OAAOA,EAAE,CAACC,IAAI,CAACF,KAAK,CAAC;EACvB,CAAC;EAED,MAAMG,KAAK,GAAG,MAAOC,GAAG,IAAK;IAC3B,IAAIA,GAAG,CAACC,QAAQ,CAACC,MAAM,KAAK,CAAC,IAAIF,GAAG,CAACC,QAAQ,CAACE,QAAQ,CAAC,WAAW,CAAC,EAAE;MACnET,UAAU,CAAC,+BAA+B,CAAC;IAC7C,CAAC,MAAM,IAAIM,GAAG,CAACJ,KAAK,CAACM,MAAM,KAAK,CAAC,IAAI,CAACP,aAAa,CAACK,GAAG,CAACJ,KAAK,CAAC,EAAE;MAC9DF,UAAU,CAAC,oCAAoC,CAAC;IAClD,CAAC,MAAM,IAAIM,GAAG,CAACI,QAAQ,CAACF,MAAM,GAAG,CAAC,EAAE;MAClCR,UAAU,CAAC,6CAA6C,CAAC;IAC3D,CAAC,MAAM,IAAIM,GAAG,CAACI,QAAQ,KAAKJ,GAAG,CAACK,WAAW,EAAE;MAC3CX,UAAU,CAAC,wBAAwB,CAAC;IACtC,CAAC,MAAM;MACL,IAAI;QACF,MAAMY,aAAa,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAClC,8CAA6CP,GAAG,CAACJ,KAAM,EAC1D,CAAC;QAED,IAAIU,aAAa,CAACE,IAAI,CAACN,MAAM,GAAG,CAAC,EAAE;UACjCR,UAAU,CAAC,sBAAsB,CAAC;QACpC,CAAC,MAAM;UACL,MAAMP,KAAK,CAACsB,IAAI,CAAE,yCAAwC,EAAE;YAC1DR,QAAQ,EAAED,GAAG,CAACC,QAAQ;YACtBL,KAAK,EAAEI,GAAG,CAACJ,KAAK;YAChBQ,QAAQ,EAAEJ,GAAG,CAACI,QAAQ;YACtBM,QAAQ,EAAEV,GAAG,CAACU,QAAQ;YACtBC,UAAU,EAAEX,GAAG,CAACW;UAClB,CAAC,CAAC;UAEFnB,QAAQ,CAAC,GAAG,CAAC;QACf;MACF,CAAC,CAAC,OAAOoB,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF;EACF,CAAC;EAED,oBACEvB,OAAA;IAAM0B,SAAS,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhB,CAAC;AAEX,CAAC;AAAC5B,EAAA,CAhDID,MAAM;EAAA,QACOJ,WAAW;AAAA;AAAAkC,EAAA,GADxB9B,MAAM;AAkDZ,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}